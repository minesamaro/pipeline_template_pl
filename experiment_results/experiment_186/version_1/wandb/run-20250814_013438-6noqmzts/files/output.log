
Running model pipeline for data fold 1...
Label column '5y' found in metadata. Available columns: ['pid', 'study_yr', 'path', 'sct_slice_num_og', '1y', '2y', '5y', '10y', 'fup_days', 'lung_side', 'de_stag', 'de_stag_7thed', 'sct_slice_new', 'sct_nod_err', 'dicom_slice_count', 'original_slice_thickness_mm', 'sct_slice_new_1', 'reversed', 'sct_slice_final_mapped', 'stage']
Label column '5y' found in metadata. Available columns: ['pid', 'study_yr', 'path', 'sct_slice_num_og', '1y', '2y', '5y', '10y', 'fup_days', 'lung_side', 'de_stag', 'de_stag_7thed', 'sct_slice_new', 'sct_nod_err', 'dicom_slice_count', 'original_slice_thickness_mm', 'sct_slice_new_1', 'reversed', 'sct_slice_final_mapped', 'stage']
Label weights: tensor([2.9900], device='cuda:0', dtype=torch.float64), Stage weights: tensor([5.7692], device='cuda:0', dtype=torch.float64)

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [4],
        [3],
        [0],
        [1],
        [0],
        [3],
        [2],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [6],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[1],
        [0],
        [0],
        [0],
        [1],
        [4],
        [0],
        [0],
        [0],
        [0],
        [4],
        [2],
        [0],
        [0],
        [2],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Labels shape: torch.Size([32]), Stage labels shape: torch.Size([32])
Stage labels: tensor([0, 4, 3, 0, 1, 0, 3, 2, 0, 0, 1, 0, 0, 0, 6, 0, 1, 0, 0, 0, 1, 4, 0, 0,
        0, 0, 4, 2, 0, 0, 2, 0], device='cuda:0')
Stage labels (shape): torch.Size([32])
Predicted labels shape: torch.Size([32]), Stage predicted labels shape: torch.Size([32, 7])
Predicted stage labels: tensor([[0.1351, 0.1444, 0.1491, 0.1359, 0.1517, 0.1434, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1518, 0.1434, 0.1404],
        [0.1353, 0.1446, 0.1497, 0.1359, 0.1510, 0.1431, 0.1405],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1515, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1353, 0.1444, 0.1495, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1431, 0.1405],
        [0.1353, 0.1446, 0.1496, 0.1359, 0.1510, 0.1431, 0.1405],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1517, 0.1434, 0.1404],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1494, 0.1359, 0.1514, 0.1432, 0.1404],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1494, 0.1359, 0.1514, 0.1432, 0.1404],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1353, 0.1446, 0.1496, 0.1359, 0.1511, 0.1431, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1489, 0.1358, 0.1522, 0.1434, 0.1403],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1431, 0.1405],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1518, 0.1434, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1432, 0.1405],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1432, 0.1405],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1404]],
       device='cuda:0')
Val_stage_pred_classes: tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4], device='cuda:0'), shape: torch.Size([32])
/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/utilities/prints.py:43: UserWarning: No positive samples in targets, true positive value should be meaningless. Returning zero tensor in true positive score
  warnings.warn(*args, **kwargs)
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([14]), Target shape: torch.Size([14, 1])
Stage output shape: torch.Size([14, 7]), Target shape: torch.Size([14, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [4],
        [3],
        [0],
        [1],
        [0],
        [3],
        [2],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [6],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[1],
        [0],
        [0],
        [0],
        [1],
        [4],
        [0],
        [0],
        [0],
        [0],
        [4],
        [2],
        [0],
        [0],
        [2],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[2],
        [0],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [6],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[6],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [4],
        [0],
        [6],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [0],
        [5],
        [0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [6],
        [0],
        [2],
        [0],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[1],
        [6],
        [2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [0],
        [1],
        [4],
        [0],
        [0],
        [2],
        [6]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 11, Labels shape: torch.Size([11, 1]), Stage labels shape: torch.Size([11, 1])
Stage labels: tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [4],
        [0],
        [0],
        [4]], device='cuda:0')
Stage labels (shape): torch.Size([11, 1])
Survival output shape: torch.Size([11]), Target shape: torch.Size([11, 1])
Stage output shape: torch.Size([11, 7]), Target shape: torch.Size([11, 1])

Labels shape: torch.Size([107]), Stage labels shape: torch.Size([107])
Stage labels: tensor([0, 4, 3, 0, 1, 0, 3, 2, 0, 0, 1, 0, 0, 0, 6, 0, 1, 0, 0, 0, 1, 4, 0, 0,
        0, 0, 4, 2, 0, 0, 2, 0, 2, 0, 1, 1, 0, 0, 0, 0, 6, 1, 1, 0, 0, 0, 0, 1,
        6, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4, 0, 6, 0, 0, 0, 5, 0, 0, 0, 2, 0,
        0, 0, 0, 6, 0, 2, 0, 0, 1, 6, 2, 0, 0, 0, 0, 0, 2, 0, 1, 4, 0, 0, 2, 6,
        0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4], device='cuda:0')
Stage labels (shape): torch.Size([107])
Predicted labels shape: torch.Size([107]), Stage predicted labels shape: torch.Size([107, 7])
Predicted stage labels: tensor([[0.2621, 0.1374, 0.1504, 0.0922, 0.1417, 0.0986, 0.1176],
        [0.2584, 0.1353, 0.1531, 0.0928, 0.1441, 0.0987, 0.1177],
        [0.2623, 0.1374, 0.1508, 0.0923, 0.1414, 0.0983, 0.1174],
        [0.2536, 0.1326, 0.1562, 0.0934, 0.1469, 0.0993, 0.1180],
        [0.2611, 0.1370, 0.1509, 0.0925, 0.1421, 0.0987, 0.1178],
        [0.2620, 0.1372, 0.1509, 0.0923, 0.1418, 0.0983, 0.1175],
        [0.2565, 0.1345, 0.1539, 0.0930, 0.1450, 0.0993, 0.1178],
        [0.2590, 0.1358, 0.1523, 0.0927, 0.1435, 0.0990, 0.1176],
        [0.2533, 0.1328, 0.1558, 0.0934, 0.1469, 0.0996, 0.1182],
        [0.2542, 0.1332, 0.1557, 0.0933, 0.1464, 0.0993, 0.1180],
        [0.2627, 0.1375, 0.1507, 0.0923, 0.1411, 0.0983, 0.1174],
        [0.2563, 0.1345, 0.1536, 0.0931, 0.1452, 0.0994, 0.1179],
        [0.2561, 0.1345, 0.1540, 0.0933, 0.1449, 0.0995, 0.1177],
        [0.2577, 0.1352, 0.1532, 0.0929, 0.1441, 0.0991, 0.1177],
        [0.2568, 0.1350, 0.1528, 0.0931, 0.1448, 0.0995, 0.1180],
        [0.2596, 0.1365, 0.1512, 0.0927, 0.1432, 0.0989, 0.1179],
        [0.2595, 0.1363, 0.1516, 0.0927, 0.1433, 0.0990, 0.1177],
        [0.2517, 0.1323, 0.1559, 0.0938, 0.1477, 0.1001, 0.1185],
        [0.2590, 0.1359, 0.1524, 0.0929, 0.1433, 0.0990, 0.1175],
        [0.2584, 0.1355, 0.1528, 0.0928, 0.1439, 0.0991, 0.1176],
        [0.2600, 0.1359, 0.1526, 0.0926, 0.1429, 0.0985, 0.1175],
        [0.2559, 0.1342, 0.1541, 0.0931, 0.1456, 0.0992, 0.1180],
        [0.2577, 0.1351, 0.1531, 0.0929, 0.1445, 0.0989, 0.1177],
        [0.2610, 0.1368, 0.1511, 0.0925, 0.1425, 0.0985, 0.1177],
        [0.2571, 0.1351, 0.1533, 0.0931, 0.1444, 0.0993, 0.1177],
        [0.2601, 0.1365, 0.1514, 0.0926, 0.1427, 0.0992, 0.1176],
        [0.2675, 0.1398, 0.1481, 0.0921, 0.1377, 0.0976, 0.1171],
        [0.2540, 0.1334, 0.1550, 0.0935, 0.1463, 0.0997, 0.1182],
        [0.2629, 0.1376, 0.1506, 0.0923, 0.1409, 0.0983, 0.1174],
        [0.2559, 0.1342, 0.1548, 0.0933, 0.1449, 0.0991, 0.1177],
        [0.2549, 0.1337, 0.1546, 0.0933, 0.1461, 0.0993, 0.1181],
        [0.2546, 0.1336, 0.1553, 0.0936, 0.1454, 0.0994, 0.1179],
        [0.2583, 0.1355, 0.1529, 0.0928, 0.1439, 0.0989, 0.1176],
        [0.2558, 0.1341, 0.1544, 0.0931, 0.1454, 0.0993, 0.1178],
        [0.2635, 0.1380, 0.1498, 0.0920, 0.1408, 0.0982, 0.1176],
        [0.2562, 0.1344, 0.1541, 0.0932, 0.1451, 0.0992, 0.1179],
        [0.2544, 0.1335, 0.1549, 0.0933, 0.1462, 0.0996, 0.1181],
        [0.2589, 0.1358, 0.1522, 0.0927, 0.1438, 0.0990, 0.1176],
        [0.2552, 0.1340, 0.1546, 0.0934, 0.1454, 0.0996, 0.1178],
        [0.2562, 0.1344, 0.1542, 0.0932, 0.1450, 0.0992, 0.1177],
        [0.2625, 0.1379, 0.1504, 0.0931, 0.1405, 0.0985, 0.1171],
        [0.2618, 0.1372, 0.1508, 0.0924, 0.1418, 0.0984, 0.1177],
        [0.2559, 0.1343, 0.1543, 0.0932, 0.1451, 0.0994, 0.1178],
        [0.2593, 0.1363, 0.1514, 0.0928, 0.1432, 0.0991, 0.1180],
        [0.2555, 0.1340, 0.1545, 0.0932, 0.1457, 0.0992, 0.1180],
        [0.2617, 0.1374, 0.1509, 0.0928, 0.1412, 0.0988, 0.1172],
        [0.2577, 0.1353, 0.1530, 0.0928, 0.1444, 0.0992, 0.1177],
        [0.2571, 0.1352, 0.1530, 0.0931, 0.1445, 0.0993, 0.1178],
        [0.2535, 0.1332, 0.1555, 0.0936, 0.1464, 0.0998, 0.1180],
        [0.2539, 0.1331, 0.1554, 0.0934, 0.1465, 0.0996, 0.1181],
        [0.2604, 0.1366, 0.1516, 0.0927, 0.1424, 0.0988, 0.1176],
        [0.2599, 0.1364, 0.1513, 0.0926, 0.1433, 0.0988, 0.1177],
        [0.2577, 0.1351, 0.1537, 0.0931, 0.1440, 0.0989, 0.1175],
        [0.2567, 0.1347, 0.1532, 0.0930, 0.1452, 0.0994, 0.1179],
        [0.2547, 0.1336, 0.1552, 0.0934, 0.1459, 0.0993, 0.1179],
        [0.2591, 0.1360, 0.1521, 0.0928, 0.1432, 0.0992, 0.1177],
        [0.2514, 0.1319, 0.1569, 0.0937, 0.1481, 0.0999, 0.1182],
        [0.2587, 0.1356, 0.1526, 0.0928, 0.1437, 0.0990, 0.1176],
        [0.2550, 0.1337, 0.1549, 0.0932, 0.1460, 0.0993, 0.1180],
        [0.2561, 0.1343, 0.1542, 0.0930, 0.1454, 0.0991, 0.1179],
        [0.2641, 0.1382, 0.1492, 0.0918, 0.1403, 0.0986, 0.1178],
        [0.2532, 0.1331, 0.1553, 0.0936, 0.1469, 0.0997, 0.1183],
        [0.2581, 0.1354, 0.1529, 0.0930, 0.1439, 0.0991, 0.1176],
        [0.2558, 0.1342, 0.1541, 0.0931, 0.1455, 0.0992, 0.1180],
        [0.2602, 0.1364, 0.1515, 0.0926, 0.1429, 0.0987, 0.1177],
        [0.2536, 0.1328, 0.1557, 0.0935, 0.1469, 0.0993, 0.1182],
        [0.2560, 0.1342, 0.1542, 0.0931, 0.1454, 0.0992, 0.1179],
        [0.2659, 0.1392, 0.1483, 0.0920, 0.1390, 0.0980, 0.1177],
        [0.2573, 0.1351, 0.1531, 0.0931, 0.1444, 0.0993, 0.1177],
        [0.2611, 0.1372, 0.1502, 0.0925, 0.1422, 0.0988, 0.1180],
        [0.2595, 0.1358, 0.1524, 0.0925, 0.1434, 0.0987, 0.1175],
        [0.2625, 0.1376, 0.1502, 0.0922, 0.1413, 0.0984, 0.1178],
        [0.2548, 0.1337, 0.1553, 0.0935, 0.1455, 0.0993, 0.1178],
        [0.2550, 0.1341, 0.1540, 0.0934, 0.1460, 0.0993, 0.1182],
        [0.2574, 0.1351, 0.1532, 0.0930, 0.1444, 0.0992, 0.1177],
        [0.2529, 0.1327, 0.1562, 0.0935, 0.1470, 0.0997, 0.1181],
        [0.2565, 0.1350, 0.1526, 0.0932, 0.1454, 0.0992, 0.1181],
        [0.2605, 0.1370, 0.1499, 0.0927, 0.1430, 0.0988, 0.1182],
        [0.2634, 0.1381, 0.1494, 0.0920, 0.1407, 0.0985, 0.1179],
        [0.2525, 0.1326, 0.1559, 0.0935, 0.1474, 0.0998, 0.1183],
        [0.2518, 0.1322, 0.1564, 0.0936, 0.1478, 0.1000, 0.1183],
        [0.2558, 0.1343, 0.1539, 0.0932, 0.1456, 0.0992, 0.1180],
        [0.2592, 0.1357, 0.1530, 0.0928, 0.1432, 0.0986, 0.1175],
        [0.2534, 0.1327, 0.1561, 0.0934, 0.1470, 0.0994, 0.1181],
        [0.2575, 0.1352, 0.1529, 0.0929, 0.1442, 0.0994, 0.1179],
        [0.2604, 0.1366, 0.1515, 0.0926, 0.1427, 0.0986, 0.1175],
        [0.2560, 0.1342, 0.1541, 0.0931, 0.1455, 0.0992, 0.1179],
        [0.2584, 0.1355, 0.1523, 0.0927, 0.1439, 0.0993, 0.1179],
        [0.2550, 0.1338, 0.1546, 0.0933, 0.1459, 0.0993, 0.1181],
        [0.2644, 0.1386, 0.1489, 0.0921, 0.1398, 0.0985, 0.1176],
        [0.2623, 0.1375, 0.1502, 0.0923, 0.1417, 0.0985, 0.1176],
        [0.2571, 0.1348, 0.1535, 0.0930, 0.1446, 0.0992, 0.1177],
        [0.2509, 0.1317, 0.1569, 0.0938, 0.1483, 0.1002, 0.1182],
        [0.2584, 0.1354, 0.1527, 0.0928, 0.1440, 0.0989, 0.1177],
        [0.2570, 0.1348, 0.1534, 0.0930, 0.1448, 0.0992, 0.1178],
        [0.2580, 0.1354, 0.1530, 0.0929, 0.1440, 0.0991, 0.1176],
        [0.2637, 0.1383, 0.1491, 0.0920, 0.1405, 0.0986, 0.1178],
        [0.2588, 0.1356, 0.1530, 0.0927, 0.1439, 0.0984, 0.1176],
        [0.2568, 0.1348, 0.1536, 0.0931, 0.1446, 0.0994, 0.1177],
        [0.2607, 0.1371, 0.1509, 0.0930, 0.1418, 0.0991, 0.1174],
        [0.2604, 0.1368, 0.1513, 0.0927, 0.1422, 0.0988, 0.1177],
        [0.2546, 0.1335, 0.1551, 0.0934, 0.1459, 0.0995, 0.1180],
        [0.2603, 0.1363, 0.1519, 0.0925, 0.1429, 0.0985, 0.1176],
        [0.2491, 0.1309, 0.1579, 0.0940, 0.1494, 0.1006, 0.1181],
        [0.2568, 0.1347, 0.1536, 0.0930, 0.1448, 0.0993, 0.1178],
        [0.2619, 0.1372, 0.1507, 0.0924, 0.1417, 0.0986, 0.1175],
        [0.2570, 0.1349, 0.1535, 0.0931, 0.1446, 0.0992, 0.1177]],
       device='cuda:0')
Val_stage_pred_classes: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0'), shape: torch.Size([107])
Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [4],
        [4],
        [4],
        [0],
        [1],
        [0],
        [2],
        [0],
        [4],
        [0],
        [0],
        [1],
        [3],
        [2],
        [0]])
Stage labels (shape): torch.Size([16, 1])
Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[4],
        [1],
        [0],
        [0],
        [0],
        [1],
        [6],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [0],
        [6]])
Stage labels (shape): torch.Size([16, 1])
Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[4],
        [0],
        [0],
        [4],
        [6],
        [0],
        [0],
        [0],
        [5],
        [0],
        [0],
        [6],
        [0],
        [0],
        [0],
        [0]])
Stage labels (shape): torch.Size([16, 1])
Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[6],
        [0],
        [1],
        [0],
        [6],
        [0],
        [0],
        [2],
        [0],
        [3],
        [0],
        [6],
        [4],
        [0],
        [0],
        [0]])
Stage labels (shape): torch.Size([16, 1])
Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [6],
        [0],
        [0],
        [0],
        [0],
        [1],
        [4],
        [4],
        [4],
        [0],
        [4],
        [0],
        [0],
        [4],
        [6]])
Stage labels (shape): torch.Size([16, 1])
Error executing job with overrides: []
Traceback (most recent call last):
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/slurm_files/shell_script_files/../../src/scripts/run_experiment_pipeline.py", line 54, in run_hyperparameter_grid_based_execution_pipeline
    run_experiment_pipeline(config)
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/slurm_files/shell_script_files/../../src/scripts/run_experiment_pipeline.py", line 167, in run_experiment_pipeline
    model_pipeline.train_model()
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/src/modules/model/model_pipeline.py", line 68, in train_model
    self.pytorch_lightning_trainer.fit(
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 532, in fit
    call._call_and_handle_interrupt(
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py", line 43, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 571, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 980, in _run
    results = self._run_stage()
              ^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 1023, in _run_stage
    self.fit_loop.run()
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/loops/fit_loop.py", line 203, in run
    self.on_advance_end()
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/loops/fit_loop.py", line 369, in on_advance_end
    call._call_lightning_module_hook(trainer, "on_train_epoch_end")
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py", line 146, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/src/modules/model/multitasksem/pytorch_lightning_multitasksem.py", line 248, in on_train_epoch_end
    self.evaluate_on_test_set()
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/src/modules/model/multitasksem/pytorch_lightning_multitasksem.py", line 103, in evaluate_on_test_set
    'test_accuracy0.5': accuracy(
                        ^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/accuracy.py", line 419, in accuracy
    return binary_accuracy(preds, target, threshold, multidim_average, ignore_index, validate_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/accuracy.py", line 160, in binary_accuracy
    _binary_stat_scores_tensor_validation(preds, target, multidim_average, ignore_index)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/stat_scores.py", line 68, in _binary_stat_scores_tensor_validation
    _check_same_shape(preds, target)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/utilities/checks.py", line 39, in _check_same_shape
    raise RuntimeError(
RuntimeError: Predictions and targets are expected to have the same shape, but got torch.Size([80]) and torch.Size([80, 1]).

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
