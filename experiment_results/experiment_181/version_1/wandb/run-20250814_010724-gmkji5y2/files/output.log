
Running model pipeline for data fold 1...
Label column '5y' found in metadata. Available columns: ['pid', 'study_yr', 'path', 'sct_slice_num_og', '1y', '2y', '5y', '10y', 'fup_days', 'lung_side', 'de_stag', 'de_stag_7thed', 'sct_slice_new', 'sct_nod_err', 'dicom_slice_count', 'original_slice_thickness_mm', 'sct_slice_new_1', 'reversed', 'sct_slice_final_mapped', 'stage']
Label column '5y' found in metadata. Available columns: ['pid', 'study_yr', 'path', 'sct_slice_num_og', '1y', '2y', '5y', '10y', 'fup_days', 'lung_side', 'de_stag', 'de_stag_7thed', 'sct_slice_new', 'sct_nod_err', 'dicom_slice_count', 'original_slice_thickness_mm', 'sct_slice_new_1', 'reversed', 'sct_slice_final_mapped', 'stage']
Label weights: tensor([2.9900], device='cuda:0', dtype=torch.float64), Stage weights: tensor([5.7692], device='cuda:0', dtype=torch.float64)

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [4],
        [3],
        [0],
        [1],
        [0],
        [3],
        [2],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [6],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[1],
        [0],
        [0],
        [0],
        [1],
        [4],
        [0],
        [0],
        [0],
        [0],
        [4],
        [2],
        [0],
        [0],
        [2],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Labels shape: torch.Size([32]), Stage labels shape: torch.Size([32, 7])
Stage labels: tensor([[0.1351, 0.1444, 0.1491, 0.1359, 0.1517, 0.1434, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1518, 0.1434, 0.1404],
        [0.1353, 0.1446, 0.1497, 0.1359, 0.1510, 0.1431, 0.1405],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1515, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1353, 0.1444, 0.1495, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1431, 0.1405],
        [0.1353, 0.1446, 0.1496, 0.1359, 0.1510, 0.1431, 0.1405],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1517, 0.1434, 0.1404],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1494, 0.1359, 0.1514, 0.1432, 0.1404],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1494, 0.1359, 0.1514, 0.1432, 0.1404],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1353, 0.1446, 0.1496, 0.1359, 0.1511, 0.1431, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1489, 0.1358, 0.1522, 0.1434, 0.1403],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1431, 0.1405],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1518, 0.1434, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1432, 0.1405],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1432, 0.1405],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1404]],
       device='cuda:0')
Stage labels (shape): torch.Size([32, 7])
Predicted labels shape: torch.Size([32]), Stage predicted labels shape: torch.Size([32, 7])
Predicted stage labels: tensor([[0.1351, 0.1444, 0.1491, 0.1359, 0.1517, 0.1434, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1518, 0.1434, 0.1404],
        [0.1353, 0.1446, 0.1497, 0.1359, 0.1510, 0.1431, 0.1405],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1515, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1353, 0.1444, 0.1495, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1431, 0.1405],
        [0.1353, 0.1446, 0.1496, 0.1359, 0.1510, 0.1431, 0.1405],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1517, 0.1434, 0.1404],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1494, 0.1359, 0.1514, 0.1432, 0.1404],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1494, 0.1359, 0.1514, 0.1432, 0.1404],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1353, 0.1446, 0.1496, 0.1359, 0.1511, 0.1431, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1489, 0.1358, 0.1522, 0.1434, 0.1403],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1431, 0.1405],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1518, 0.1434, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1432, 0.1405],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1432, 0.1405],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1404]],
       device='cuda:0')
Val_stage_pred_classes: tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4], device='cuda:0'), shape: torch.Size([32])
Error executing job with overrides: []
Traceback (most recent call last):
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/slurm_files/shell_script_files/../../src/scripts/run_experiment_pipeline.py", line 54, in run_hyperparameter_grid_based_execution_pipeline
    run_experiment_pipeline(config)
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/slurm_files/shell_script_files/../../src/scripts/run_experiment_pipeline.py", line 167, in run_experiment_pipeline
    model_pipeline.train_model()
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/src/modules/model/model_pipeline.py", line 68, in train_model
    self.pytorch_lightning_trainer.fit(
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 532, in fit
    call._call_and_handle_interrupt(
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py", line 43, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 571, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 980, in _run
    results = self._run_stage()
              ^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 1021, in _run_stage
    self._run_sanity_check()
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 1050, in _run_sanity_check
    val_loop.run()
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/loops/utilities.py", line 181, in _decorator
    return loop_run(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 122, in run
    return self.on_run_end()
           ^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 244, in on_run_end
    self._on_evaluation_epoch_end()
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/loops/evaluation_loop.py", line 326, in _on_evaluation_epoch_end
    call._call_lightning_module_hook(trainer, hook_name)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py", line 146, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/src/modules/model/multitasksem/pytorch_lightning_multitasksem.py", line 358, in on_validation_epoch_end
    'val_stage_accuracy0.5': accuracy(
                             ^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/accuracy.py", line 427, in accuracy
    return multiclass_accuracy(
           ^^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/accuracy.py", line 266, in multiclass_accuracy
    _multiclass_stat_scores_tensor_validation(preds, target, num_classes, multidim_average, ignore_index)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/stat_scores.py", line 313, in _multiclass_stat_scores_tensor_validation
    raise ValueError(
ValueError: Either `preds` and `target` both should have the (same) shape (N, ...), or `target` should be (N, ...) and `preds` should be (N, C, ...).

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
