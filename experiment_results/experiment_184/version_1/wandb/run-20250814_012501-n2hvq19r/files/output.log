
Running model pipeline for data fold 1...
Label column '5y' found in metadata. Available columns: ['pid', 'study_yr', 'path', 'sct_slice_num_og', '1y', '2y', '5y', '10y', 'fup_days', 'lung_side', 'de_stag', 'de_stag_7thed', 'sct_slice_new', 'sct_nod_err', 'dicom_slice_count', 'original_slice_thickness_mm', 'sct_slice_new_1', 'reversed', 'sct_slice_final_mapped', 'stage']
Label column '5y' found in metadata. Available columns: ['pid', 'study_yr', 'path', 'sct_slice_num_og', '1y', '2y', '5y', '10y', 'fup_days', 'lung_side', 'de_stag', 'de_stag_7thed', 'sct_slice_new', 'sct_nod_err', 'dicom_slice_count', 'original_slice_thickness_mm', 'sct_slice_new_1', 'reversed', 'sct_slice_final_mapped', 'stage']
Label weights: tensor([2.9900], device='cuda:0', dtype=torch.float64), Stage weights: tensor([5.7692], device='cuda:0', dtype=torch.float64)

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [4],
        [3],
        [0],
        [1],
        [0],
        [3],
        [2],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [6],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[1],
        [0],
        [0],
        [0],
        [1],
        [4],
        [0],
        [0],
        [0],
        [0],
        [4],
        [2],
        [0],
        [0],
        [2],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Labels shape: torch.Size([32]), Stage labels shape: torch.Size([32])
Stage labels: tensor([0, 4, 3, 0, 1, 0, 3, 2, 0, 0, 1, 0, 0, 0, 6, 0, 1, 0, 0, 0, 1, 4, 0, 0,
        0, 0, 4, 2, 0, 0, 2, 0], device='cuda:0')
Stage labels (shape): torch.Size([32])
Predicted labels shape: torch.Size([32]), Stage predicted labels shape: torch.Size([32, 7])
Predicted stage labels: tensor([[0.1351, 0.1444, 0.1491, 0.1359, 0.1517, 0.1434, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1518, 0.1434, 0.1404],
        [0.1353, 0.1446, 0.1497, 0.1359, 0.1510, 0.1431, 0.1405],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1515, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1353, 0.1444, 0.1495, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1431, 0.1405],
        [0.1353, 0.1446, 0.1496, 0.1359, 0.1510, 0.1431, 0.1405],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1517, 0.1434, 0.1404],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1494, 0.1359, 0.1514, 0.1432, 0.1404],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1494, 0.1359, 0.1514, 0.1432, 0.1404],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1353, 0.1446, 0.1496, 0.1359, 0.1511, 0.1431, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1489, 0.1358, 0.1522, 0.1434, 0.1403],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1431, 0.1405],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1518, 0.1434, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1432, 0.1405],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1432, 0.1405],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1404]],
       device='cuda:0')
Val_stage_pred_classes: tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4], device='cuda:0'), shape: torch.Size([32])
/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/utilities/prints.py:43: UserWarning: No positive samples in targets, true positive value should be meaningless. Returning zero tensor in true positive score
  warnings.warn(*args, **kwargs)
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([14]), Target shape: torch.Size([14, 1])
Stage output shape: torch.Size([14, 7]), Target shape: torch.Size([14, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [4],
        [3],
        [0],
        [1],
        [0],
        [3],
        [2],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [6],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[1],
        [0],
        [0],
        [0],
        [1],
        [4],
        [0],
        [0],
        [0],
        [0],
        [4],
        [2],
        [0],
        [0],
        [2],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[2],
        [0],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [6],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[6],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [4],
        [0],
        [6],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [0],
        [5],
        [0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [6],
        [0],
        [2],
        [0],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[1],
        [6],
        [2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [0],
        [1],
        [4],
        [0],
        [0],
        [2],
        [6]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 11, Labels shape: torch.Size([11, 1]), Stage labels shape: torch.Size([11, 1])
Stage labels: tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [4],
        [0],
        [0],
        [4]], device='cuda:0')
Stage labels (shape): torch.Size([11, 1])
Survival output shape: torch.Size([11]), Target shape: torch.Size([11, 1])
Stage output shape: torch.Size([11, 7]), Target shape: torch.Size([11, 1])

Labels shape: torch.Size([107]), Stage labels shape: torch.Size([107])
Stage labels: tensor([0, 4, 3, 0, 1, 0, 3, 2, 0, 0, 1, 0, 0, 0, 6, 0, 1, 0, 0, 0, 1, 4, 0, 0,
        0, 0, 4, 2, 0, 0, 2, 0, 2, 0, 1, 1, 0, 0, 0, 0, 6, 1, 1, 0, 0, 0, 0, 1,
        6, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4, 0, 6, 0, 0, 0, 5, 0, 0, 0, 2, 0,
        0, 0, 0, 6, 0, 2, 0, 0, 1, 6, 2, 0, 0, 0, 0, 0, 2, 0, 1, 4, 0, 0, 2, 6,
        0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4], device='cuda:0')
Stage labels (shape): torch.Size([107])
Predicted labels shape: torch.Size([107]), Stage predicted labels shape: torch.Size([107, 7])
Predicted stage labels: tensor([[0.2812, 0.1561, 0.1312, 0.0939, 0.1322, 0.0958, 0.1095],
        [0.2765, 0.1553, 0.1339, 0.0950, 0.1332, 0.0956, 0.1105],
        [0.2813, 0.1568, 0.1319, 0.0938, 0.1315, 0.0955, 0.1092],
        [0.2717, 0.1534, 0.1362, 0.0959, 0.1355, 0.0961, 0.1112],
        [0.2799, 0.1558, 0.1315, 0.0943, 0.1326, 0.0958, 0.1100],
        [0.2805, 0.1562, 0.1319, 0.0941, 0.1322, 0.0956, 0.1095],
        [0.2757, 0.1544, 0.1340, 0.0954, 0.1336, 0.0962, 0.1108],
        [0.2781, 0.1552, 0.1329, 0.0947, 0.1329, 0.0959, 0.1102],
        [0.2726, 0.1537, 0.1360, 0.0958, 0.1345, 0.0962, 0.1112],
        [0.2726, 0.1536, 0.1355, 0.0958, 0.1351, 0.0962, 0.1112],
        [0.2818, 0.1568, 0.1317, 0.0936, 0.1313, 0.0956, 0.1091],
        [0.2758, 0.1542, 0.1339, 0.0953, 0.1337, 0.0963, 0.1108],
        [0.2760, 0.1547, 0.1343, 0.0953, 0.1330, 0.0962, 0.1106],
        [0.2768, 0.1547, 0.1332, 0.0952, 0.1333, 0.0961, 0.1106],
        [0.2765, 0.1544, 0.1335, 0.0952, 0.1334, 0.0962, 0.1108],
        [0.2786, 0.1557, 0.1324, 0.0945, 0.1328, 0.0959, 0.1101],
        [0.2789, 0.1557, 0.1328, 0.0943, 0.1324, 0.0958, 0.1099],
        [0.2711, 0.1533, 0.1366, 0.0961, 0.1349, 0.0965, 0.1115],
        [0.2782, 0.1555, 0.1330, 0.0947, 0.1326, 0.0959, 0.1100],
        [0.2777, 0.1553, 0.1334, 0.0948, 0.1328, 0.0959, 0.1102],
        [0.2785, 0.1559, 0.1333, 0.0945, 0.1323, 0.0956, 0.1098],
        [0.2746, 0.1542, 0.1345, 0.0954, 0.1342, 0.0960, 0.1110],
        [0.2762, 0.1548, 0.1338, 0.0952, 0.1335, 0.0958, 0.1108],
        [0.2795, 0.1562, 0.1327, 0.0941, 0.1321, 0.0956, 0.1096],
        [0.2767, 0.1549, 0.1339, 0.0950, 0.1329, 0.0960, 0.1106],
        [0.2802, 0.1558, 0.1322, 0.0941, 0.1321, 0.0960, 0.1097],
        [0.2867, 0.1590, 0.1291, 0.0922, 0.1298, 0.0958, 0.1074],
        [0.2733, 0.1538, 0.1353, 0.0957, 0.1342, 0.0963, 0.1112],
        [0.2821, 0.1569, 0.1314, 0.0937, 0.1313, 0.0956, 0.1090],
        [0.2752, 0.1546, 0.1348, 0.0955, 0.1332, 0.0961, 0.1107],
        [0.2738, 0.1541, 0.1351, 0.0956, 0.1342, 0.0961, 0.1110],
        [0.2742, 0.1548, 0.1356, 0.0957, 0.1327, 0.0963, 0.1107],
        [0.2770, 0.1552, 0.1336, 0.0950, 0.1330, 0.0959, 0.1103],
        [0.2749, 0.1543, 0.1347, 0.0954, 0.1338, 0.0960, 0.1110],
        [0.2822, 0.1568, 0.1310, 0.0936, 0.1317, 0.0955, 0.1091],
        [0.2751, 0.1543, 0.1343, 0.0955, 0.1338, 0.0960, 0.1110],
        [0.2740, 0.1539, 0.1350, 0.0956, 0.1340, 0.0963, 0.1111],
        [0.2779, 0.1552, 0.1331, 0.0948, 0.1330, 0.0958, 0.1103],
        [0.2750, 0.1546, 0.1349, 0.0955, 0.1330, 0.0963, 0.1107],
        [0.2753, 0.1548, 0.1346, 0.0954, 0.1333, 0.0960, 0.1107],
        [0.2819, 0.1576, 0.1313, 0.0936, 0.1311, 0.0957, 0.1089],
        [0.2802, 0.1559, 0.1315, 0.0942, 0.1326, 0.0957, 0.1098],
        [0.2757, 0.1545, 0.1343, 0.0954, 0.1331, 0.0963, 0.1107],
        [0.2787, 0.1551, 0.1321, 0.0947, 0.1330, 0.0961, 0.1104],
        [0.2741, 0.1541, 0.1349, 0.0955, 0.1343, 0.0960, 0.1110],
        [0.2818, 0.1569, 0.1319, 0.0936, 0.1310, 0.0958, 0.1090],
        [0.2771, 0.1548, 0.1334, 0.0949, 0.1332, 0.0961, 0.1104],
        [0.2765, 0.1547, 0.1334, 0.0952, 0.1333, 0.0962, 0.1107],
        [0.2733, 0.1537, 0.1354, 0.0959, 0.1342, 0.0964, 0.1112],
        [0.2734, 0.1539, 0.1357, 0.0957, 0.1340, 0.0962, 0.1111],
        [0.2794, 0.1556, 0.1319, 0.0946, 0.1325, 0.0959, 0.1101],
        [0.2788, 0.1556, 0.1329, 0.0944, 0.1326, 0.0957, 0.1100],
        [0.2765, 0.1553, 0.1341, 0.0951, 0.1329, 0.0958, 0.1103],
        [0.2763, 0.1544, 0.1339, 0.0951, 0.1334, 0.0960, 0.1108],
        [0.2736, 0.1540, 0.1349, 0.0958, 0.1344, 0.0962, 0.1110],
        [0.2785, 0.1552, 0.1323, 0.0949, 0.1328, 0.0961, 0.1103],
        [0.2698, 0.1528, 0.1370, 0.0963, 0.1362, 0.0964, 0.1116],
        [0.2777, 0.1552, 0.1334, 0.0948, 0.1328, 0.0958, 0.1102],
        [0.2739, 0.1540, 0.1350, 0.0956, 0.1343, 0.0961, 0.1111],
        [0.2749, 0.1541, 0.1340, 0.0955, 0.1344, 0.0962, 0.1109],
        [0.2841, 0.1567, 0.1296, 0.0934, 0.1312, 0.0961, 0.1090],
        [0.2723, 0.1533, 0.1358, 0.0959, 0.1351, 0.0962, 0.1115],
        [0.2771, 0.1552, 0.1335, 0.0950, 0.1329, 0.0959, 0.1103],
        [0.2747, 0.1541, 0.1344, 0.0955, 0.1342, 0.0961, 0.1111],
        [0.2790, 0.1557, 0.1328, 0.0944, 0.1325, 0.0957, 0.1099],
        [0.2718, 0.1535, 0.1362, 0.0959, 0.1353, 0.0961, 0.1113],
        [0.2750, 0.1544, 0.1344, 0.0954, 0.1339, 0.0961, 0.1109],
        [0.2846, 0.1578, 0.1295, 0.0930, 0.1308, 0.0955, 0.1088],
        [0.2772, 0.1549, 0.1338, 0.0950, 0.1327, 0.0961, 0.1104],
        [0.2804, 0.1557, 0.1313, 0.0941, 0.1326, 0.0960, 0.1099],
        [0.2780, 0.1555, 0.1332, 0.0947, 0.1328, 0.0957, 0.1101],
        [0.2809, 0.1561, 0.1308, 0.0941, 0.1325, 0.0957, 0.1099],
        [0.2742, 0.1544, 0.1353, 0.0956, 0.1334, 0.0962, 0.1108],
        [0.2741, 0.1539, 0.1348, 0.0956, 0.1343, 0.0961, 0.1113],
        [0.2767, 0.1549, 0.1338, 0.0950, 0.1330, 0.0959, 0.1105],
        [0.2718, 0.1532, 0.1361, 0.0960, 0.1352, 0.0963, 0.1114],
        [0.2755, 0.1546, 0.1340, 0.0952, 0.1337, 0.0961, 0.1109],
        [0.2789, 0.1567, 0.1328, 0.0939, 0.1321, 0.0957, 0.1100],
        [0.2828, 0.1565, 0.1301, 0.0936, 0.1317, 0.0959, 0.1093],
        [0.2713, 0.1531, 0.1364, 0.0960, 0.1354, 0.0963, 0.1115],
        [0.2708, 0.1529, 0.1368, 0.0961, 0.1354, 0.0964, 0.1115],
        [0.2748, 0.1540, 0.1344, 0.0954, 0.1341, 0.0961, 0.1111],
        [0.2776, 0.1556, 0.1336, 0.0948, 0.1326, 0.0956, 0.1101],
        [0.2717, 0.1534, 0.1362, 0.0959, 0.1355, 0.0962, 0.1113],
        [0.2769, 0.1546, 0.1330, 0.0952, 0.1333, 0.0962, 0.1107],
        [0.2793, 0.1561, 0.1329, 0.0943, 0.1322, 0.0956, 0.1097],
        [0.2750, 0.1540, 0.1340, 0.0955, 0.1343, 0.0962, 0.1110],
        [0.2777, 0.1546, 0.1327, 0.0949, 0.1333, 0.0962, 0.1105],
        [0.2738, 0.1539, 0.1349, 0.0957, 0.1344, 0.0961, 0.1111],
        [0.2843, 0.1573, 0.1301, 0.0929, 0.1308, 0.0958, 0.1088],
        [0.2814, 0.1566, 0.1316, 0.0937, 0.1319, 0.0956, 0.1093],
        [0.2763, 0.1547, 0.1338, 0.0952, 0.1333, 0.0960, 0.1107],
        [0.2699, 0.1529, 0.1371, 0.0963, 0.1356, 0.0966, 0.1115],
        [0.2770, 0.1550, 0.1335, 0.0949, 0.1332, 0.0958, 0.1105],
        [0.2761, 0.1545, 0.1338, 0.0952, 0.1336, 0.0960, 0.1108],
        [0.2773, 0.1554, 0.1338, 0.0948, 0.1326, 0.0959, 0.1102],
        [0.2835, 0.1568, 0.1301, 0.0933, 0.1313, 0.0959, 0.1091],
        [0.2767, 0.1552, 0.1336, 0.0951, 0.1334, 0.0956, 0.1105],
        [0.2764, 0.1550, 0.1341, 0.0951, 0.1328, 0.0961, 0.1105],
        [0.2803, 0.1567, 0.1318, 0.0940, 0.1319, 0.0959, 0.1094],
        [0.2793, 0.1556, 0.1317, 0.0947, 0.1326, 0.0959, 0.1102],
        [0.2739, 0.1542, 0.1352, 0.0957, 0.1338, 0.0963, 0.1109],
        [0.2785, 0.1556, 0.1327, 0.0946, 0.1328, 0.0957, 0.1100],
        [0.2680, 0.1523, 0.1380, 0.0967, 0.1364, 0.0967, 0.1119],
        [0.2759, 0.1546, 0.1340, 0.0953, 0.1334, 0.0960, 0.1108],
        [0.2813, 0.1566, 0.1318, 0.0938, 0.1315, 0.0957, 0.1092],
        [0.2762, 0.1548, 0.1341, 0.0952, 0.1332, 0.0959, 0.1107]],
       device='cuda:0')
Val_stage_pred_classes: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0'), shape: torch.Size([107])
Error executing job with overrides: []
Traceback (most recent call last):
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/slurm_files/shell_script_files/../../src/scripts/run_experiment_pipeline.py", line 54, in run_hyperparameter_grid_based_execution_pipeline
    run_experiment_pipeline(config)
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/slurm_files/shell_script_files/../../src/scripts/run_experiment_pipeline.py", line 167, in run_experiment_pipeline
    model_pipeline.train_model()
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/src/modules/model/model_pipeline.py", line 68, in train_model
    self.pytorch_lightning_trainer.fit(
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 532, in fit
    call._call_and_handle_interrupt(
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py", line 43, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 571, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 980, in _run
    results = self._run_stage()
              ^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 1023, in _run_stage
    self.fit_loop.run()
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/loops/fit_loop.py", line 203, in run
    self.on_advance_end()
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/loops/fit_loop.py", line 369, in on_advance_end
    call._call_lightning_module_hook(trainer, "on_train_epoch_end")
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py", line 146, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/src/modules/model/multitasksem/pytorch_lightning_multitasksem.py", line 225, in on_train_epoch_end
    'train_auroc': auroc(
                   ^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/auroc.py", line 471, in auroc
    return binary_auroc(preds, target, max_fpr, thresholds, ignore_index, validate_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/auroc.py", line 175, in binary_auroc
    _binary_precision_recall_curve_tensor_validation(preds, target, ignore_index)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/precision_recall_curve.py", line 137, in _binary_precision_recall_curve_tensor_validation
    _check_same_shape(preds, target)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/utilities/checks.py", line 39, in _check_same_shape
    raise RuntimeError(
RuntimeError: Predictions and targets are expected to have the same shape, but got torch.Size([318]) and torch.Size([318, 1]).

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
