
Running model pipeline for data fold 1...
Label column '5y' found in metadata. Available columns: ['pid', 'study_yr', 'path', 'sct_slice_num_og', '1y', '2y', '5y', '10y', 'fup_days', 'lung_side', 'de_stag', 'de_stag_7thed', 'sct_slice_new', 'sct_nod_err', 'dicom_slice_count', 'original_slice_thickness_mm', 'sct_slice_new_1', 'reversed', 'sct_slice_final_mapped', 'stage']
Label column '5y' found in metadata. Available columns: ['pid', 'study_yr', 'path', 'sct_slice_num_og', '1y', '2y', '5y', '10y', 'fup_days', 'lung_side', 'de_stag', 'de_stag_7thed', 'sct_slice_new', 'sct_nod_err', 'dicom_slice_count', 'original_slice_thickness_mm', 'sct_slice_new_1', 'reversed', 'sct_slice_final_mapped', 'stage']
Label weights: tensor([2.9900], device='cuda:0', dtype=torch.float64), Stage weights: tensor([5.7692], device='cuda:0', dtype=torch.float64)

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [4],
        [3],
        [0],
        [1],
        [0],
        [3],
        [2],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [6],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[1],
        [0],
        [0],
        [0],
        [1],
        [4],
        [0],
        [0],
        [0],
        [0],
        [4],
        [2],
        [0],
        [0],
        [2],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Labels shape: torch.Size([32]), Stage labels shape: torch.Size([32])
Stage labels: tensor([0, 4, 3, 0, 1, 0, 3, 2, 0, 0, 1, 0, 0, 0, 6, 0, 1, 0, 0, 0, 1, 4, 0, 0,
        0, 0, 4, 2, 0, 0, 2, 0], device='cuda:0')
Stage labels (shape): torch.Size([32])
Predicted labels shape: torch.Size([32]), Stage predicted labels shape: torch.Size([32, 7])
Predicted stage labels: tensor([[0.1351, 0.1444, 0.1491, 0.1359, 0.1517, 0.1434, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1518, 0.1434, 0.1404],
        [0.1353, 0.1446, 0.1497, 0.1359, 0.1510, 0.1431, 0.1405],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1515, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1353, 0.1444, 0.1495, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1431, 0.1405],
        [0.1353, 0.1446, 0.1496, 0.1359, 0.1510, 0.1431, 0.1405],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1517, 0.1434, 0.1404],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1494, 0.1359, 0.1514, 0.1432, 0.1404],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1494, 0.1359, 0.1514, 0.1432, 0.1404],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1353, 0.1446, 0.1496, 0.1359, 0.1511, 0.1431, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1489, 0.1358, 0.1522, 0.1434, 0.1403],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1431, 0.1405],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1518, 0.1434, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1432, 0.1405],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1432, 0.1405],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1404]],
       device='cuda:0')
Val_stage_pred_classes: tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4], device='cuda:0'), shape: torch.Size([32])
/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/utilities/prints.py:43: UserWarning: No positive samples in targets, true positive value should be meaningless. Returning zero tensor in true positive score
  warnings.warn(*args, **kwargs)
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([14]), Target shape: torch.Size([14, 1])
Stage output shape: torch.Size([14, 7]), Target shape: torch.Size([14, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [4],
        [3],
        [0],
        [1],
        [0],
        [3],
        [2],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [6],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[1],
        [0],
        [0],
        [0],
        [1],
        [4],
        [0],
        [0],
        [0],
        [0],
        [4],
        [2],
        [0],
        [0],
        [2],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[2],
        [0],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [6],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[6],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [4],
        [0],
        [6],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [0],
        [5],
        [0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [6],
        [0],
        [2],
        [0],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[1],
        [6],
        [2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [0],
        [1],
        [4],
        [0],
        [0],
        [2],
        [6]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 11, Labels shape: torch.Size([11, 1]), Stage labels shape: torch.Size([11, 1])
Stage labels: tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [4],
        [0],
        [0],
        [4]], device='cuda:0')
Stage labels (shape): torch.Size([11, 1])
Survival output shape: torch.Size([11]), Target shape: torch.Size([11, 1])
Stage output shape: torch.Size([11, 7]), Target shape: torch.Size([11, 1])

Labels shape: torch.Size([107]), Stage labels shape: torch.Size([107])
Stage labels: tensor([0, 4, 3, 0, 1, 0, 3, 2, 0, 0, 1, 0, 0, 0, 6, 0, 1, 0, 0, 0, 1, 4, 0, 0,
        0, 0, 4, 2, 0, 0, 2, 0, 2, 0, 1, 1, 0, 0, 0, 0, 6, 1, 1, 0, 0, 0, 0, 1,
        6, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4, 0, 6, 0, 0, 0, 5, 0, 0, 0, 2, 0,
        0, 0, 0, 6, 0, 2, 0, 0, 1, 6, 2, 0, 0, 0, 0, 0, 2, 0, 1, 4, 0, 0, 2, 6,
        0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4], device='cuda:0')
Stage labels (shape): torch.Size([107])
Predicted labels shape: torch.Size([107]), Stage predicted labels shape: torch.Size([107, 7])
Predicted stage labels: tensor([[0.2371, 0.1461, 0.1428, 0.0980, 0.1478, 0.0960, 0.1322],
        [0.2341, 0.1460, 0.1435, 0.0988, 0.1492, 0.0964, 0.1321],
        [0.2367, 0.1461, 0.1430, 0.0980, 0.1477, 0.0961, 0.1323],
        [0.2318, 0.1457, 0.1444, 0.0993, 0.1507, 0.0972, 0.1310],
        [0.2366, 0.1460, 0.1428, 0.0982, 0.1484, 0.0960, 0.1319],
        [0.2362, 0.1460, 0.1430, 0.0982, 0.1482, 0.0961, 0.1323],
        [0.2339, 0.1458, 0.1435, 0.0989, 0.1497, 0.0967, 0.1315],
        [0.2351, 0.1459, 0.1432, 0.0985, 0.1490, 0.0964, 0.1318],
        [0.2324, 0.1456, 0.1442, 0.0991, 0.1503, 0.0973, 0.1311],
        [0.2324, 0.1458, 0.1442, 0.0992, 0.1505, 0.0970, 0.1310],
        [0.2369, 0.1460, 0.1429, 0.0980, 0.1479, 0.0961, 0.1322],
        [0.2340, 0.1458, 0.1436, 0.0988, 0.1496, 0.0967, 0.1315],
        [0.2338, 0.1457, 0.1438, 0.0988, 0.1497, 0.0970, 0.1312],
        [0.2346, 0.1458, 0.1434, 0.0987, 0.1496, 0.0966, 0.1314],
        [0.2352, 0.1459, 0.1432, 0.0985, 0.1492, 0.0965, 0.1315],
        [0.2358, 0.1462, 0.1430, 0.0983, 0.1485, 0.0962, 0.1321],
        [0.2356, 0.1461, 0.1431, 0.0983, 0.1484, 0.0963, 0.1322],
        [0.2321, 0.1457, 0.1443, 0.0992, 0.1505, 0.0974, 0.1309],
        [0.2350, 0.1459, 0.1433, 0.0986, 0.1490, 0.0965, 0.1317],
        [0.2347, 0.1459, 0.1434, 0.0986, 0.1489, 0.0966, 0.1318],
        [0.2346, 0.1459, 0.1434, 0.0986, 0.1488, 0.0965, 0.1321],
        [0.2337, 0.1458, 0.1436, 0.0989, 0.1497, 0.0967, 0.1316],
        [0.2347, 0.1459, 0.1434, 0.0987, 0.1492, 0.0964, 0.1317],
        [0.2358, 0.1461, 0.1430, 0.0983, 0.1482, 0.0960, 0.1325],
        [0.2346, 0.1458, 0.1435, 0.0986, 0.1493, 0.0967, 0.1315],
        [0.2361, 0.1458, 0.1432, 0.0981, 0.1485, 0.0965, 0.1317],
        [0.2397, 0.1462, 0.1426, 0.0968, 0.1463, 0.0958, 0.1324],
        [0.2331, 0.1457, 0.1439, 0.0991, 0.1501, 0.0971, 0.1311],
        [0.2368, 0.1459, 0.1431, 0.0979, 0.1479, 0.0962, 0.1321],
        [0.2329, 0.1457, 0.1440, 0.0990, 0.1502, 0.0970, 0.1312],
        [0.2331, 0.1459, 0.1438, 0.0990, 0.1498, 0.0968, 0.1316],
        [0.2325, 0.1456, 0.1441, 0.0991, 0.1502, 0.0975, 0.1311],
        [0.2344, 0.1458, 0.1435, 0.0987, 0.1493, 0.0966, 0.1318],
        [0.2336, 0.1457, 0.1438, 0.0989, 0.1498, 0.0968, 0.1314],
        [0.2376, 0.1462, 0.1427, 0.0978, 0.1475, 0.0958, 0.1324],
        [0.2340, 0.1458, 0.1436, 0.0989, 0.1498, 0.0967, 0.1313],
        [0.2333, 0.1457, 0.1439, 0.0989, 0.1500, 0.0970, 0.1311],
        [0.2354, 0.1459, 0.1431, 0.0985, 0.1488, 0.0963, 0.1320],
        [0.2334, 0.1456, 0.1439, 0.0989, 0.1499, 0.0972, 0.1311],
        [0.2335, 0.1458, 0.1437, 0.0989, 0.1498, 0.0968, 0.1315],
        [0.2377, 0.1461, 0.1429, 0.0980, 0.1477, 0.0961, 0.1316],
        [0.2368, 0.1461, 0.1428, 0.0981, 0.1482, 0.0959, 0.1321],
        [0.2333, 0.1457, 0.1439, 0.0989, 0.1500, 0.0970, 0.1311],
        [0.2364, 0.1460, 0.1428, 0.0983, 0.1486, 0.0962, 0.1318],
        [0.2333, 0.1458, 0.1438, 0.0990, 0.1497, 0.0967, 0.1317],
        [0.2368, 0.1461, 0.1430, 0.0980, 0.1480, 0.0964, 0.1318],
        [0.2343, 0.1458, 0.1435, 0.0986, 0.1494, 0.0967, 0.1317],
        [0.2347, 0.1458, 0.1434, 0.0986, 0.1495, 0.0966, 0.1315],
        [0.2325, 0.1457, 0.1441, 0.0991, 0.1505, 0.0973, 0.1307],
        [0.2327, 0.1457, 0.1440, 0.0991, 0.1502, 0.0972, 0.1311],
        [0.2359, 0.1459, 0.1430, 0.0984, 0.1489, 0.0963, 0.1316],
        [0.2358, 0.1460, 0.1430, 0.0983, 0.1484, 0.0961, 0.1324],
        [0.2339, 0.1459, 0.1436, 0.0988, 0.1494, 0.0966, 0.1317],
        [0.2350, 0.1459, 0.1433, 0.0986, 0.1490, 0.0965, 0.1317],
        [0.2326, 0.1458, 0.1441, 0.0992, 0.1504, 0.0971, 0.1309],
        [0.2353, 0.1458, 0.1432, 0.0985, 0.1491, 0.0965, 0.1315],
        [0.2314, 0.1457, 0.1446, 0.0994, 0.1509, 0.0974, 0.1306],
        [0.2347, 0.1459, 0.1434, 0.0986, 0.1490, 0.0965, 0.1319],
        [0.2333, 0.1457, 0.1439, 0.0989, 0.1500, 0.0970, 0.1313],
        [0.2334, 0.1458, 0.1438, 0.0989, 0.1500, 0.0967, 0.1315],
        [0.2378, 0.1458, 0.1427, 0.0977, 0.1477, 0.0962, 0.1322],
        [0.2331, 0.1458, 0.1439, 0.0990, 0.1502, 0.0968, 0.1312],
        [0.2347, 0.1459, 0.1434, 0.0986, 0.1492, 0.0966, 0.1316],
        [0.2339, 0.1458, 0.1436, 0.0989, 0.1497, 0.0966, 0.1315],
        [0.2354, 0.1460, 0.1431, 0.0984, 0.1485, 0.0962, 0.1324],
        [0.2321, 0.1458, 0.1442, 0.0992, 0.1505, 0.0970, 0.1313],
        [0.2336, 0.1459, 0.1437, 0.0990, 0.1496, 0.0967, 0.1316],
        [0.2400, 0.1462, 0.1423, 0.0973, 0.1466, 0.0954, 0.1321],
        [0.2346, 0.1458, 0.1435, 0.0985, 0.1492, 0.0968, 0.1316],
        [0.2372, 0.1460, 0.1427, 0.0980, 0.1481, 0.0960, 0.1322],
        [0.2348, 0.1460, 0.1433, 0.0986, 0.1489, 0.0964, 0.1321],
        [0.2378, 0.1460, 0.1426, 0.0978, 0.1481, 0.0958, 0.1319],
        [0.2326, 0.1456, 0.1441, 0.0991, 0.1503, 0.0973, 0.1311],
        [0.2338, 0.1458, 0.1436, 0.0988, 0.1497, 0.0966, 0.1317],
        [0.2345, 0.1459, 0.1434, 0.0987, 0.1492, 0.0966, 0.1317],
        [0.2321, 0.1457, 0.1444, 0.0992, 0.1507, 0.0973, 0.1306],
        [0.2346, 0.1459, 0.1432, 0.0986, 0.1491, 0.0963, 0.1322],
        [0.2373, 0.1463, 0.1427, 0.0978, 0.1475, 0.0957, 0.1327],
        [0.2379, 0.1460, 0.1426, 0.0977, 0.1477, 0.0959, 0.1322],
        [0.2325, 0.1457, 0.1442, 0.0991, 0.1504, 0.0971, 0.1310],
        [0.2320, 0.1456, 0.1444, 0.0992, 0.1508, 0.0973, 0.1307],
        [0.2342, 0.1458, 0.1435, 0.0988, 0.1497, 0.0965, 0.1316],
        [0.2344, 0.1459, 0.1435, 0.0987, 0.1492, 0.0964, 0.1319],
        [0.2320, 0.1457, 0.1443, 0.0992, 0.1506, 0.0971, 0.1310],
        [0.2349, 0.1458, 0.1433, 0.0986, 0.1495, 0.0966, 0.1313],
        [0.2357, 0.1460, 0.1432, 0.0982, 0.1483, 0.0963, 0.1322],
        [0.2339, 0.1458, 0.1436, 0.0988, 0.1499, 0.0967, 0.1313],
        [0.2355, 0.1459, 0.1431, 0.0985, 0.1490, 0.0964, 0.1316],
        [0.2334, 0.1459, 0.1438, 0.0990, 0.1500, 0.0967, 0.1313],
        [0.2388, 0.1460, 0.1426, 0.0975, 0.1470, 0.0960, 0.1321],
        [0.2374, 0.1462, 0.1428, 0.0979, 0.1475, 0.0959, 0.1324],
        [0.2343, 0.1459, 0.1435, 0.0988, 0.1494, 0.0966, 0.1316],
        [0.2311, 0.1455, 0.1447, 0.0994, 0.1511, 0.0979, 0.1303],
        [0.2349, 0.1459, 0.1433, 0.0986, 0.1490, 0.0963, 0.1320],
        [0.2344, 0.1459, 0.1435, 0.0988, 0.1494, 0.0966, 0.1317],
        [0.2347, 0.1459, 0.1434, 0.0986, 0.1490, 0.0967, 0.1317],
        [0.2383, 0.1461, 0.1424, 0.0976, 0.1473, 0.0958, 0.1323],
        [0.2341, 0.1461, 0.1435, 0.0988, 0.1492, 0.0963, 0.1319],
        [0.2341, 0.1458, 0.1436, 0.0988, 0.1494, 0.0969, 0.1315],
        [0.2370, 0.1460, 0.1429, 0.0982, 0.1482, 0.0964, 0.1314],
        [0.2367, 0.1460, 0.1428, 0.0982, 0.1487, 0.0961, 0.1315],
        [0.2327, 0.1457, 0.1440, 0.0991, 0.1502, 0.0973, 0.1310],
        [0.2351, 0.1460, 0.1432, 0.0985, 0.1488, 0.0962, 0.1321],
        [0.2304, 0.1454, 0.1449, 0.0997, 0.1514, 0.0983, 0.1298],
        [0.2343, 0.1458, 0.1435, 0.0988, 0.1494, 0.0966, 0.1315],
        [0.2367, 0.1461, 0.1430, 0.0981, 0.1478, 0.0962, 0.1322],
        [0.2343, 0.1458, 0.1435, 0.0987, 0.1494, 0.0966, 0.1317]],
       device='cuda:0')
Val_stage_pred_classes: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0'), shape: torch.Size([107])
Error executing job with overrides: []
Traceback (most recent call last):
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/slurm_files/shell_script_files/../../src/scripts/run_experiment_pipeline.py", line 54, in run_hyperparameter_grid_based_execution_pipeline
    run_experiment_pipeline(config)
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/slurm_files/shell_script_files/../../src/scripts/run_experiment_pipeline.py", line 167, in run_experiment_pipeline
    model_pipeline.train_model()
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/src/modules/model/model_pipeline.py", line 68, in train_model
    self.pytorch_lightning_trainer.fit(
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 532, in fit
    call._call_and_handle_interrupt(
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py", line 43, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 571, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 980, in _run
    results = self._run_stage()
              ^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 1023, in _run_stage
    self.fit_loop.run()
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/loops/fit_loop.py", line 203, in run
    self.on_advance_end()
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/loops/fit_loop.py", line 369, in on_advance_end
    call._call_lightning_module_hook(trainer, "on_train_epoch_end")
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py", line 146, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/src/modules/model/multitasksem/pytorch_lightning_multitasksem.py", line 225, in on_train_epoch_end
    'train_auroc': auroc(
                   ^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/auroc.py", line 471, in auroc
    return binary_auroc(preds, target, max_fpr, thresholds, ignore_index, validate_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/auroc.py", line 175, in binary_auroc
    _binary_precision_recall_curve_tensor_validation(preds, target, ignore_index)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/precision_recall_curve.py", line 137, in _binary_precision_recall_curve_tensor_validation
    _check_same_shape(preds, target)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/utilities/checks.py", line 39, in _check_same_shape
    raise RuntimeError(
RuntimeError: Predictions and targets are expected to have the same shape, but got torch.Size([318]) and torch.Size([318, 1]).

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
