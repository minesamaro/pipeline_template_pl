
Running model pipeline for data fold 1...
Label column '5y' found in metadata. Available columns: ['pid', 'study_yr', 'path', 'sct_slice_num_og', '1y', '2y', '5y', '10y', 'fup_days', 'lung_side', 'de_stag', 'de_stag_7thed', 'sct_slice_new', 'sct_nod_err', 'dicom_slice_count', 'original_slice_thickness_mm', 'sct_slice_new_1', 'reversed', 'sct_slice_final_mapped', 'stage']
Label column '5y' found in metadata. Available columns: ['pid', 'study_yr', 'path', 'sct_slice_num_og', '1y', '2y', '5y', '10y', 'fup_days', 'lung_side', 'de_stag', 'de_stag_7thed', 'sct_slice_new', 'sct_nod_err', 'dicom_slice_count', 'original_slice_thickness_mm', 'sct_slice_new_1', 'reversed', 'sct_slice_final_mapped', 'stage']
Label weights: tensor([2.9900], device='cuda:0', dtype=torch.float64), Stage weights: tensor([5.7692], device='cuda:0', dtype=torch.float64)

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [4],
        [3],
        [0],
        [1],
        [0],
        [3],
        [2],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [6],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[1],
        [0],
        [0],
        [0],
        [1],
        [4],
        [0],
        [0],
        [0],
        [0],
        [4],
        [2],
        [0],
        [0],
        [2],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Labels shape: torch.Size([32]), Stage labels shape: torch.Size([32])
Stage labels: tensor([0, 4, 3, 0, 1, 0, 3, 2, 0, 0, 1, 0, 0, 0, 6, 0, 1, 0, 0, 0, 1, 4, 0, 0,
        0, 0, 4, 2, 0, 0, 2, 0], device='cuda:0')
Stage labels (shape): torch.Size([32])
Predicted labels shape: torch.Size([32]), Stage predicted labels shape: torch.Size([32, 7])
Predicted stage labels: tensor([[0.1351, 0.1444, 0.1491, 0.1359, 0.1517, 0.1434, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1518, 0.1434, 0.1404],
        [0.1353, 0.1446, 0.1497, 0.1359, 0.1510, 0.1431, 0.1405],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1515, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1353, 0.1444, 0.1495, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1431, 0.1405],
        [0.1353, 0.1446, 0.1496, 0.1359, 0.1510, 0.1431, 0.1405],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1517, 0.1434, 0.1404],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1494, 0.1359, 0.1514, 0.1432, 0.1404],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1494, 0.1359, 0.1514, 0.1432, 0.1404],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1353, 0.1446, 0.1496, 0.1359, 0.1511, 0.1431, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1352, 0.1444, 0.1492, 0.1359, 0.1515, 0.1433, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1513, 0.1432, 0.1405],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1352, 0.1444, 0.1493, 0.1359, 0.1514, 0.1433, 0.1404],
        [0.1351, 0.1444, 0.1492, 0.1359, 0.1516, 0.1434, 0.1404],
        [0.1351, 0.1444, 0.1489, 0.1358, 0.1522, 0.1434, 0.1403],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1431, 0.1405],
        [0.1351, 0.1444, 0.1491, 0.1359, 0.1518, 0.1434, 0.1404],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1432, 0.1405],
        [0.1353, 0.1445, 0.1495, 0.1359, 0.1512, 0.1432, 0.1405],
        [0.1353, 0.1444, 0.1494, 0.1359, 0.1513, 0.1432, 0.1404]],
       device='cuda:0')
Val_stage_pred_classes: tensor([4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
        4, 4, 4, 4, 4, 4, 4, 4], device='cuda:0'), shape: torch.Size([32])
/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/utilities/prints.py:43: UserWarning: No positive samples in targets, true positive value should be meaningless. Returning zero tensor in true positive score
  warnings.warn(*args, **kwargs)
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])
Survival output shape: torch.Size([14]), Target shape: torch.Size([14, 1])
Stage output shape: torch.Size([14, 7]), Target shape: torch.Size([14, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [4],
        [3],
        [0],
        [1],
        [0],
        [3],
        [2],
        [0],
        [0],
        [1],
        [0],
        [0],
        [0],
        [6],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[1],
        [0],
        [0],
        [0],
        [1],
        [4],
        [0],
        [0],
        [0],
        [0],
        [4],
        [2],
        [0],
        [0],
        [2],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[2],
        [0],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [6],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[6],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [4],
        [0],
        [6],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[0],
        [0],
        [5],
        [0],
        [0],
        [0],
        [2],
        [0],
        [0],
        [0],
        [0],
        [6],
        [0],
        [2],
        [0],
        [0]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 16, Labels shape: torch.Size([16, 1]), Stage labels shape: torch.Size([16, 1])
Stage labels: tensor([[1],
        [6],
        [2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [0],
        [1],
        [4],
        [0],
        [0],
        [2],
        [6]], device='cuda:0')
Stage labels (shape): torch.Size([16, 1])
Survival output shape: torch.Size([16]), Target shape: torch.Size([16, 1])
Stage output shape: torch.Size([16, 7]), Target shape: torch.Size([16, 1])

Batch size: 11, Labels shape: torch.Size([11, 1]), Stage labels shape: torch.Size([11, 1])
Stage labels: tensor([[0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [4],
        [0],
        [0],
        [4]], device='cuda:0')
Stage labels (shape): torch.Size([11, 1])
Survival output shape: torch.Size([11]), Target shape: torch.Size([11, 1])
Stage output shape: torch.Size([11, 7]), Target shape: torch.Size([11, 1])

Labels shape: torch.Size([107]), Stage labels shape: torch.Size([107])
Stage labels: tensor([0, 4, 3, 0, 1, 0, 3, 2, 0, 0, 1, 0, 0, 0, 6, 0, 1, 0, 0, 0, 1, 4, 0, 0,
        0, 0, 4, 2, 0, 0, 2, 0, 2, 0, 1, 1, 0, 0, 0, 0, 6, 1, 1, 0, 0, 0, 0, 1,
        6, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4, 0, 6, 0, 0, 0, 5, 0, 0, 0, 2, 0,
        0, 0, 0, 6, 0, 2, 0, 0, 1, 6, 2, 0, 0, 0, 0, 0, 2, 0, 1, 4, 0, 0, 2, 6,
        0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4], device='cuda:0')
Stage labels (shape): torch.Size([107])
Predicted labels shape: torch.Size([107]), Stage predicted labels shape: torch.Size([107, 7])
Predicted stage labels: tensor([[0.2343, 0.1230, 0.1314, 0.1038, 0.1533, 0.1039, 0.1503],
        [0.2311, 0.1226, 0.1339, 0.1041, 0.1537, 0.1039, 0.1508],
        [0.2344, 0.1231, 0.1310, 0.1039, 0.1531, 0.1044, 0.1502],
        [0.2273, 0.1221, 0.1377, 0.1043, 0.1544, 0.1031, 0.1511],
        [0.2335, 0.1229, 0.1325, 0.1040, 0.1532, 0.1036, 0.1504],
        [0.2338, 0.1230, 0.1315, 0.1038, 0.1532, 0.1040, 0.1504],
        [0.2297, 0.1226, 0.1354, 0.1042, 0.1541, 0.1032, 0.1508],
        [0.2317, 0.1228, 0.1337, 0.1041, 0.1537, 0.1035, 0.1505],
        [0.2278, 0.1221, 0.1372, 0.1043, 0.1546, 0.1032, 0.1508],
        [0.2277, 0.1222, 0.1375, 0.1043, 0.1542, 0.1030, 0.1511],
        [0.2346, 0.1231, 0.1310, 0.1038, 0.1530, 0.1044, 0.1501],
        [0.2297, 0.1225, 0.1354, 0.1042, 0.1541, 0.1032, 0.1509],
        [0.2299, 0.1225, 0.1354, 0.1043, 0.1539, 0.1034, 0.1505],
        [0.2308, 0.1227, 0.1350, 0.1041, 0.1536, 0.1032, 0.1505],
        [0.2306, 0.1226, 0.1348, 0.1042, 0.1540, 0.1030, 0.1507],
        [0.2327, 0.1227, 0.1325, 0.1041, 0.1536, 0.1038, 0.1506],
        [0.2324, 0.1228, 0.1326, 0.1041, 0.1537, 0.1039, 0.1505],
        [0.2268, 0.1218, 0.1379, 0.1045, 0.1547, 0.1031, 0.1512],
        [0.2317, 0.1227, 0.1337, 0.1043, 0.1535, 0.1037, 0.1504],
        [0.2313, 0.1227, 0.1340, 0.1040, 0.1537, 0.1038, 0.1505],
        [0.2323, 0.1227, 0.1331, 0.1039, 0.1533, 0.1043, 0.1504],
        [0.2294, 0.1225, 0.1355, 0.1042, 0.1542, 0.1032, 0.1510],
        [0.2307, 0.1227, 0.1343, 0.1042, 0.1540, 0.1033, 0.1507],
        [0.2332, 0.1227, 0.1317, 0.1040, 0.1533, 0.1043, 0.1507],
        [0.2307, 0.1227, 0.1346, 0.1042, 0.1539, 0.1034, 0.1505],
        [0.2331, 0.1229, 0.1327, 0.1040, 0.1535, 0.1038, 0.1501],
        [0.2386, 0.1229, 0.1277, 0.1040, 0.1519, 0.1054, 0.1496],
        [0.2283, 0.1222, 0.1366, 0.1044, 0.1543, 0.1032, 0.1509],
        [0.2348, 0.1231, 0.1309, 0.1039, 0.1528, 0.1045, 0.1501],
        [0.2292, 0.1223, 0.1361, 0.1043, 0.1538, 0.1037, 0.1506],
        [0.2285, 0.1222, 0.1360, 0.1044, 0.1544, 0.1033, 0.1512],
        [0.2290, 0.1221, 0.1360, 0.1044, 0.1541, 0.1040, 0.1504],
        [0.2312, 0.1226, 0.1341, 0.1042, 0.1536, 0.1038, 0.1506],
        [0.2294, 0.1226, 0.1357, 0.1042, 0.1542, 0.1033, 0.1507],
        [0.2353, 0.1233, 0.1303, 0.1037, 0.1530, 0.1042, 0.1503],
        [0.2296, 0.1225, 0.1357, 0.1043, 0.1539, 0.1032, 0.1507],
        [0.2286, 0.1223, 0.1366, 0.1042, 0.1544, 0.1032, 0.1507],
        [0.2318, 0.1227, 0.1334, 0.1041, 0.1537, 0.1036, 0.1506],
        [0.2294, 0.1224, 0.1357, 0.1043, 0.1541, 0.1036, 0.1505],
        [0.2297, 0.1224, 0.1353, 0.1043, 0.1540, 0.1037, 0.1506],
        [0.2349, 0.1229, 0.1312, 0.1043, 0.1526, 0.1043, 0.1498],
        [0.2339, 0.1231, 0.1320, 0.1039, 0.1531, 0.1037, 0.1503],
        [0.2295, 0.1224, 0.1359, 0.1042, 0.1540, 0.1035, 0.1505],
        [0.2324, 0.1229, 0.1334, 0.1041, 0.1536, 0.1031, 0.1506],
        [0.2290, 0.1224, 0.1357, 0.1043, 0.1542, 0.1033, 0.1511],
        [0.2344, 0.1229, 0.1313, 0.1042, 0.1531, 0.1042, 0.1499],
        [0.2308, 0.1226, 0.1345, 0.1041, 0.1537, 0.1036, 0.1506],
        [0.2306, 0.1226, 0.1349, 0.1043, 0.1538, 0.1032, 0.1505],
        [0.2277, 0.1222, 0.1377, 0.1043, 0.1544, 0.1030, 0.1507],
        [0.2282, 0.1222, 0.1367, 0.1043, 0.1544, 0.1034, 0.1508],
        [0.2328, 0.1229, 0.1334, 0.1040, 0.1531, 0.1036, 0.1502],
        [0.2325, 0.1228, 0.1323, 0.1041, 0.1538, 0.1037, 0.1508],
        [0.2307, 0.1225, 0.1346, 0.1043, 0.1536, 0.1039, 0.1505],
        [0.2304, 0.1225, 0.1346, 0.1042, 0.1543, 0.1032, 0.1508],
        [0.2282, 0.1223, 0.1373, 0.1043, 0.1541, 0.1031, 0.1508],
        [0.2319, 0.1227, 0.1340, 0.1041, 0.1534, 0.1034, 0.1504],
        [0.2260, 0.1218, 0.1391, 0.1044, 0.1546, 0.1028, 0.1514],
        [0.2314, 0.1227, 0.1338, 0.1041, 0.1537, 0.1037, 0.1506],
        [0.2288, 0.1224, 0.1363, 0.1042, 0.1542, 0.1033, 0.1508],
        [0.2292, 0.1224, 0.1360, 0.1042, 0.1539, 0.1032, 0.1510],
        [0.2357, 0.1229, 0.1304, 0.1035, 0.1529, 0.1043, 0.1502],
        [0.2276, 0.1222, 0.1372, 0.1045, 0.1547, 0.1027, 0.1512],
        [0.2312, 0.1227, 0.1343, 0.1042, 0.1536, 0.1036, 0.1504],
        [0.2294, 0.1225, 0.1357, 0.1043, 0.1541, 0.1031, 0.1509],
        [0.2326, 0.1228, 0.1323, 0.1041, 0.1536, 0.1039, 0.1507],
        [0.2274, 0.1221, 0.1373, 0.1044, 0.1544, 0.1032, 0.1512],
        [0.2294, 0.1223, 0.1356, 0.1042, 0.1542, 0.1033, 0.1510],
        [0.2375, 0.1234, 0.1291, 0.1036, 0.1523, 0.1042, 0.1499],
        [0.2309, 0.1226, 0.1344, 0.1042, 0.1540, 0.1034, 0.1505],
        [0.2337, 0.1229, 0.1318, 0.1041, 0.1534, 0.1036, 0.1505],
        [0.2319, 0.1227, 0.1333, 0.1040, 0.1536, 0.1039, 0.1506],
        [0.2347, 0.1231, 0.1317, 0.1038, 0.1528, 0.1036, 0.1501],
        [0.2287, 0.1222, 0.1364, 0.1043, 0.1541, 0.1036, 0.1506],
        [0.2289, 0.1224, 0.1357, 0.1044, 0.1544, 0.1030, 0.1511],
        [0.2307, 0.1226, 0.1344, 0.1042, 0.1539, 0.1035, 0.1506],
        [0.2270, 0.1220, 0.1383, 0.1043, 0.1544, 0.1028, 0.1511],
        [0.2302, 0.1223, 0.1343, 0.1045, 0.1542, 0.1034, 0.1512],
        [0.2341, 0.1226, 0.1307, 0.1044, 0.1533, 0.1041, 0.1507],
        [0.2353, 0.1230, 0.1307, 0.1037, 0.1530, 0.1040, 0.1503],
        [0.2270, 0.1222, 0.1377, 0.1044, 0.1548, 0.1027, 0.1512],
        [0.2265, 0.1221, 0.1385, 0.1044, 0.1547, 0.1027, 0.1511],
        [0.2294, 0.1225, 0.1356, 0.1043, 0.1543, 0.1030, 0.1509],
        [0.2317, 0.1227, 0.1337, 0.1041, 0.1534, 0.1040, 0.1505],
        [0.2273, 0.1222, 0.1376, 0.1043, 0.1544, 0.1031, 0.1511],
        [0.2309, 0.1227, 0.1350, 0.1042, 0.1537, 0.1031, 0.1504],
        [0.2330, 0.1229, 0.1322, 0.1041, 0.1533, 0.1041, 0.1504],
        [0.2294, 0.1225, 0.1360, 0.1042, 0.1541, 0.1030, 0.1508],
        [0.2315, 0.1228, 0.1341, 0.1041, 0.1538, 0.1031, 0.1507],
        [0.2288, 0.1223, 0.1363, 0.1043, 0.1542, 0.1031, 0.1510],
        [0.2365, 0.1232, 0.1296, 0.1036, 0.1528, 0.1044, 0.1499],
        [0.2346, 0.1231, 0.1305, 0.1039, 0.1534, 0.1041, 0.1504],
        [0.2303, 0.1225, 0.1349, 0.1042, 0.1539, 0.1034, 0.1507],
        [0.2258, 0.1218, 0.1392, 0.1044, 0.1546, 0.1030, 0.1512],
        [0.2312, 0.1226, 0.1339, 0.1042, 0.1537, 0.1036, 0.1508],
        [0.2302, 0.1226, 0.1349, 0.1042, 0.1540, 0.1032, 0.1509],
        [0.2314, 0.1226, 0.1340, 0.1041, 0.1537, 0.1039, 0.1503],
        [0.2358, 0.1231, 0.1301, 0.1037, 0.1531, 0.1040, 0.1502],
        [0.2315, 0.1228, 0.1339, 0.1040, 0.1535, 0.1039, 0.1505],
        [0.2304, 0.1224, 0.1348, 0.1042, 0.1539, 0.1037, 0.1506],
        [0.2337, 0.1229, 0.1321, 0.1043, 0.1532, 0.1039, 0.1499],
        [0.2332, 0.1230, 0.1332, 0.1040, 0.1531, 0.1034, 0.1501],
        [0.2286, 0.1222, 0.1366, 0.1042, 0.1542, 0.1035, 0.1507],
        [0.2325, 0.1228, 0.1329, 0.1040, 0.1533, 0.1039, 0.1505],
        [0.2245, 0.1216, 0.1406, 0.1045, 0.1548, 0.1027, 0.1513],
        [0.2302, 0.1226, 0.1350, 0.1042, 0.1540, 0.1033, 0.1507],
        [0.2342, 0.1230, 0.1312, 0.1039, 0.1532, 0.1043, 0.1502],
        [0.2304, 0.1226, 0.1347, 0.1042, 0.1539, 0.1035, 0.1506]],
       device='cuda:0')
Val_stage_pred_classes: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], device='cuda:0'), shape: torch.Size([107])
Error executing job with overrides: []
Traceback (most recent call last):
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/slurm_files/shell_script_files/../../src/scripts/run_experiment_pipeline.py", line 54, in run_hyperparameter_grid_based_execution_pipeline
    run_experiment_pipeline(config)
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/slurm_files/shell_script_files/../../src/scripts/run_experiment_pipeline.py", line 167, in run_experiment_pipeline
    model_pipeline.train_model()
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/src/modules/model/model_pipeline.py", line 68, in train_model
    self.pytorch_lightning_trainer.fit(
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 532, in fit
    call._call_and_handle_interrupt(
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py", line 43, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 571, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 980, in _run
    results = self._run_stage()
              ^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/trainer.py", line 1023, in _run_stage
    self.fit_loop.run()
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/loops/fit_loop.py", line 203, in run
    self.on_advance_end()
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/loops/fit_loop.py", line 369, in on_advance_end
    call._call_lightning_module_hook(trainer, "on_train_epoch_end")
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/pytorch_lightning/trainer/call.py", line 146, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/pipeline_template_pl/src/modules/model/multitasksem/pytorch_lightning_multitasksem.py", line 225, in on_train_epoch_end
    'train_auroc': auroc(
                   ^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/auroc.py", line 471, in auroc
    return binary_auroc(preds, target, max_fpr, thresholds, ignore_index, validate_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/auroc.py", line 175, in binary_auroc
    _binary_precision_recall_curve_tensor_validation(preds, target, ignore_index)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/functional/classification/precision_recall_curve.py", line 137, in _binary_precision_recall_curve_tensor_validation
    _check_same_shape(preds, target)
  File "/nas-ctm01/homes/mipaiva/.conda/envs/pipeline/lib/python3.11/site-packages/torchmetrics/utilities/checks.py", line 39, in _check_same_shape
    raise RuntimeError(
RuntimeError: Predictions and targets are expected to have the same shape, but got torch.Size([318]) and torch.Size([318, 1]).

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
